// Generated by delombok at Mon May 20 05:22:39 JST 2013
package jp.ac.osakau.farseerfc.purano.effect;

import jp.ac.osakau.farseerfc.purano.dep.DepSet;
import jp.ac.osakau.farseerfc.purano.reflect.MethodRep;
import jp.ac.osakau.farseerfc.purano.util.Types;

public class CallEffect extends FieldEffect implements Cloneable {
	
	public CallEffect(String callType, String desc, String owner, String name, DepSet deps, MethodRep from) {
		super(desc, owner, name, deps, from);
		this.callType = callType;
	}
	private final String callType;
	
	@Override
	public Effect clone() {
		return new CallEffect(callType, getDesc(), getOwner(), getName(), getDeps(), getFrom());
	}
	
	@Override
	protected String dumpEffect(MethodRep rep, Types table) {
		return String.format("%s %s: [%s]", getCallType(), table.dumpMethodDesc(getDesc(), String.format("%s#%s", table.fullClassName(getOwner()), getName())), getDeps().dumpDeps(rep, table));
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof CallEffect)) return false;
		final CallEffect other = (CallEffect)o;
		if (!other.canEqual((java.lang.Object)this)) return false;
		if (!super.equals(o)) return false;
		final java.lang.Object this$callType = this.getCallType();
		final java.lang.Object other$callType = other.getCallType();
		if (this$callType == null ? other$callType != null : !this$callType.equals(other$callType)) return false;
		return true;
	}
	
	@java.lang.SuppressWarnings("all")
	public boolean canEqual(final java.lang.Object other) {
		return other instanceof CallEffect;
	}
	
	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 31;
		int result = 1;
		result = result * PRIME + super.hashCode();
		final java.lang.Object $callType = this.getCallType();
		result = result * PRIME + ($callType == null ? 0 : $callType.hashCode());
		return result;
	}
	
	@java.lang.SuppressWarnings("all")
	public String getCallType() {
		return this.callType;
	}
}